openapi: 3.0.0
info:
  title: STZ Jewelry API
  description: API documentation for STZ Jewelry
  version: 1.0.0

tags:
  - name: Users
    description: User management
  - name: Products
    description: Product management
  - name: Orders
    description: Order management
  - name: Login
    description: User authentication
  - name: Feedbacks
    description: User feedback management

paths:
  /users:
    get:
      tags:
        - Users
      summary: Get all users
      responses:
        '200':
          description: A list of users
    post:
      tags:
        - Users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: User found
    put:
      tags:
        - Users
      summary: Update user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
    delete:
      tags:
        - Users
      summary: Delete user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: User deleted

  /users/{id}/orders:
    get:
      tags:
        - Users
      summary: Get orders for a user
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: A list of orders

  /products:
    get:
      tags:
        - Products
      summary: Get all products
      responses:
        '200':
          description: A list of products
    post:
      tags:
        - Products
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created

  /products/{id}:
    get:
      tags:
        - Products
      summary: Get product by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Product found
    put:
      tags:
        - Products
      summary: Update product by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated
    delete:
      tags:
        - Products
      summary: Delete product by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Product deleted

  /orders:
    get:
      tags:
        - Orders
      summary: Get all orders
      responses:
        '200':
          description: A list of orders
    post:
      tags:
        - Orders
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created

  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Get order by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Order found
    put:
      tags:
        - Orders
      summary: Update order by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order updated
    delete:
      tags:
        - Orders
      summary: Delete order by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Order deleted

  /orders/{id}/status:
    patch:
      tags:
        - Orders
      summary: Update order status by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        '200':
          description: Order status updated

  /login:
    post:
      tags:
        - Login
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User logged in

  /feedbacks:
    get:
      tags:
        - Feedbacks
      summary: Get all feedbacks
      responses:
        '200':
          description: A list of feedbacks
    post:
      tags:
        - Feedbacks
      summary: Create a new feedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
      responses:
        '201':
          description: Feedback created

  /feedbacks/{id}:
    get:
      tags:
        - Feedbacks
      summary: Get feedback by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Feedback found
    delete:
      tags:
        - Feedbacks
      summary: Delete feedback by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Feedback deleted

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        password:
          type: string

    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number

    Order:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        productIds:
          type: array
          items:
            type: integer
        status:
          type: string
        totalPrice:
          type: number
        orderDate:
          type: string
          format: date-time

    Feedback:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        message:
          type: string
        createdAt:
          type: string
          format: date-time
